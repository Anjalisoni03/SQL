---------------------------------------------------DDL(data defination language)----------------------------------------
CREATE TABLE-------------
CREATE TABLE EMPLOYEES(
EMP_ID INT NOT NULL,
FIRST_NAME VARCHAR(20),
LAST_NAME VARCHAR(20),
SALARY INT,
PRIMARY KEY (EMP_ID));

TO ALTER----------
ALTER TABLE EMPLOYEES ADD CONTACT INT;

TO REANME---------
ALTER TABLE EMPLOYEES RENAME COLUMN CONTACT TO JOB_CODE;

TO TRUNCATE-----------
TRUNCATE TABLE EMPLOYEES;

TO DROP--------------
DROP TABLE EMPLOYEES;
ALTER TABLE EMPLOYEES DROP COLUMN DEPT;

--------------------------------------------------DML(DATA MANIPULTAION LANGUAGE)--------------------
TO INSERT ------------------
INSERT INTO EMPLOYEES(EMP_ID,FIRST_NAME,LAST_NAME,SALARY)VALUES(103,'HARRY','POTTER',30000);

TO UPDATE----------------
UPDATE EMPLOYEES SET LAST_NAME='COHEN' WHERE EMP_ID=101;
UPDATE DEPARTMENT SET DEP_ID=3 WHERE DEP_LOC='BOSTONR';

TO DELETE DATA----------
DELETE FROM EMPLOYEES WHERE EMP_ID IN (101,103);

-------------------------------------------DCL(DATA CONTROL LANGUAGE)-----------------------------
GRANT- GIVES ACCESS TO DTABASE
REVOKE- WITHDRAWS ACCESS

-----------------------------------------TCL(TRANSACTION CONTROL LANGUAGE)---------------------------------
COMMIT
ROLLBACK
SAVEPOINT

-----------------------------------------OPERATORS---------------------------
WHERE-------------
fetching data, select, delete, update etc,
SELECT * FROM EMPLOYEES WHERE EMP_ID=105;

AND,OR,NOT,>,>=,<,<=,<>,!=-----------
SELECT * FROM EMPLOYEES WHERE SALARY>30000 AND LAST_NAME='SONI';
SELECT * FROM EMPLOYEES WHERE SALARY!=30000 ;

BETWEEN, LIKE, IS NULL, IN, DISTINCT------------
SELECT * FROM EMPLOYEES WHERE SALARY IN (10000,20000,90000) ;

TO GET DISTINCT-------
SELECT DISTINCT(FIRST_NAME) FROM EMPLOYEES ;

AGGREGRATIONS--------
AVG(),COUNT(),MAX(),MIN(),SUM()
SELECT AVG(SALARY) FROM EMPLOYEES ;
SELECT MIN(SALARY) FROM EMPLOYEES ;
SELECT MAX(SALARY) FROM EMPLOYEES ;
SELECT SUM(SALARY) FROM EMPLOYEES ;
SELECT COUNT(*) FROM EMPLOYEES ;

GROUP BY CLAUSE--------------(MAX ONLY TWO IS ALLOWED)
SELECT  MAX(SALARY) , DEP FROM EMPLOYEES GROUP BY DEP;

UPDATE EMPLOYEES SET DEP='SALES' WHERE EMP_ID=101;
SELECT MAX(SALARY),FIRST_NAME FROM EMPLOYEES GROUP BY FIRST_NAME;

SQL HAVING CLAUSE---------
must follow groupby clause
SELECT MAX(SALARY),DEP FROM EMPLOYEES GROUP BY DEP HAVING COUNT(DEP)<=1;

ORDER BY CLAUSE--------------
SELECT * FROM EMPLOYEES ORDER BY SALARY DESC;

UNION-------
combines two tables removing duplicates must have same number of columns in both tables, with similar data types.
more than two queries can be clubbed.

CREATE TABLE PRODUCT1(CATG_ID INT, PRODUCT_NAME VARCHAR(20),PRIMARY KEY(CATG_ID));
CREATE TABLE PRODUCT2(CATG_ID INT, PRODUCT_NAME VARCHAR(20),PRIMARY KEY(CATG_ID));
INSERT INTO PRODUCT1(CATG_ID,PRODUCT_NAME) VALUES(1,'NOKIA');
INSERT INTO PRODUCT1(CATG_ID,PRODUCT_NAME) VALUES(2,'SAMSUNG');
INSERT INTO PRODUCT2(CATG_ID,PRODUCT_NAME) VALUES(1,'SAMSUNG');
INSERT INTO PRODUCT2(CATG_ID,PRODUCT_NAME) VALUES(2,'NIKON');
SELECT PRODUCT_NAME FROM PRODUCT1 UNION SELECT PRODUCT_NAME FROM PRODUCT2;

UNION ALL-------------
gets duplicate value
SELECT PRODUCT_NAME FROM PRODUCT1 UNION SELECT PRODUCT_NAME FROM PRODUCT2;

INTERSACTION-------------
SELECT PRODUCT_NAME FROM PRODUCT1 INTERSECT SELECT PRODUCT_NAME FROM PRODUCT2; 

-----------------------------------------------------------SQL JOINS--------------------------------------------------------
combines rows/columns from two or moe tables based on related column btw them in database

INNER JOIN-------
A U B SATISFIES A AND B

SELECT E.FIRST_NAME,E.SALARY,D.DEPT,D.DEP_LOC
FROM EMPLOYEES E
INNER JOIN
DEPARTMENT D
ON E.DEP=D.DEPT;

LEFT JOIN---------
only a table as it is at left part no matter b have same elements or not.
SELECT E.FIRST_NAME,E.SALARY,E.DEP,D.DEPT,D.DEP_LOC
FROM EMPLOYEES E
LEFT JOIN DEPARTMENT D
ON E.DEP=D.DEPT;
 
RIGHT JOIN---------
 only B table
 
FULL OUTER JOINS-----
complete both tables

SELF JOIN---------
table A is assigned to itself by alotting B the value of A and applying self in both
 
CARTESIAN JOIN------
product of sets in both tables
 
 query-- removing exact duplicate rowa
 








